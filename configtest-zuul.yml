zuul:
#  retryable: true 
  add-host-header: true
#  ignored-services: "*"
  routes:
    clientService:
      path: /clientService/**
      stripPrefix: true
      serviceId: clientService
      sensitiveHeaders: "*"
#    fotileService:
#      path: /fotileService/**
#      stripPrefix: true
#      serviceId: fotileService
#      sensitiveHeaders: "*"
#    basicService:
#      path: /basicService/**
#      stripPrefix: true   
#      serviceId: basicService 
#      sensitiveHeaders: "*"
#    zipkinServer:
#      path: /zipkinServer/**
#      stripPrefix: true   
#      serviceId: zipkinServer 
#      sensitiveHeaders: "*"  
#    authserver:
#      path: /user/**
#      url: http://localhost:9999/user
#      serviceId: authserver 
#      sensitiveHeaders: "*"
      

        
#    portchange:
#      path: /hello
#      stripPrefix: true
#      url: http://localhost:80
#---
#zuul: 
#  ribbon-isolation-strategy: THREAD
---
zuul:
  max:
    host:
      connections: 500
  host:
    socket-timeout-millis: 60000
    connect-timeout-millis: 10000

---
ribbon:  
  ReadTimeout: 60000
  ConnectTimeout: 10000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  OkToRetryOnAllOperations: false
#  eureka:
#    enabled: true
#---
#hystrix:
#  command:
#    default:
#      execution:
#        timeout:
#          enabled: true
#        isolation:
#          thread:
#            timeoutInMilliseconds: 60000
                      #这里将线程策略设置为SEMAPHORE
#          strategy: SEMAPHORE       
#        semaphore:
##          maxConcurrentRequests: 200
#---

#hystrix:
#  command:
#    fotileweb:
#      execution:
#        timeout:
#          enabled: true
#        isolation:
#          thread:
#            timeoutInMilliseconds: 60000
#          strategy: SEMAPHORE       
#        semaphore:
#          maxConcurrentRequests: 200
#---          
#feign:
#  hystrix:
#    enabled: true  
#  httpclient:
#    enabled: true
            
---
hystrix:  
  threadpool:  
    default:  
      coreSize: 10000 #缺省为10
      maximumSize: 200   
      maxQueueSize: -1
          
#fotileweb:
#  ribbon:
#    listOfServers: localhost:8090
#
#fotileService:
#  ribbon:
#    listOfServers: localhost:2000
#
#serviceBasic:
#  ribbon:
#    listOfServers: localhost:2001,localhost:2005
#    
#authserver:
#  ribbon:
#    listOfServers: localhost:9999 

#zuul:
#  semaphore:
#    max-semaphores: 100 # 默认值

---

zuul:
  ribbon-isolation-strategy: thread
    
    
proxy:
  auth:
    routes:
      fotileService: oauth2
      basicService: oauth2
      fotileweb: oauth2
      authserver: oauth2
#      stores: passthru
#      recommendations: none
---
spring:
  session:
    store-type: redis   
  cloud:
    zookeeper:
      dependency:
        enabled: false   
        
 
---

feign:
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048 
    response: 
      enabled: true        
                
#---
##断路器的超时时间,断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
##hystrix:
##  command:
##    default:
##      execution:
##        isolation:
##          thread:
##            timeoutInMilliseconds: 10000    
#            
#            
##retry
##该参数用来开启重试机制
##spring:
##  cloud:
##    loadbalancer:
##      retry:
##        enabled: true
#        
##ribbon请求连接的超时时间
#ribbon: 
#  eureka:
#    enabled: true
#  ConnectTimeout: 60000
##请求处理的超时时间
#  ReadTimeout: 60000  
##对所有操作请求都进行重试
#  OkToRetryOnAllOperations: false
##对当前实例的重试次数
#  MaxAutoRetries: 1
##对下个实例的重试次数
#  MaxAutoRetriesNextServer: 1  
#  
#---
#hystrix:
#  threadpool:
#    default:
#      coreSize: 1000 ##并发执行的最大线程数，默认10
#      maxQueueSize: 1000 ##BlockingQueue的最大队列数
#      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000
#   
#---
#
#feign:
#  httpclient:
#    enabled: true
#    max-connections: 200 # 默认值
#    max-connections-per-route: 50 # 默认值



                            